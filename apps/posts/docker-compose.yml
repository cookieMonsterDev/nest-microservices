version: '3.8'

services:
  posts:
    build:
      context: ../../
      dockerfile: apps/posts/Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - KAFKA_BROKER=kafka:9092
      - KAFKA_CLIENT_ID=posts-service
      - DATABASE_URL=postgresql://posts:posts_password@posts-db:5432/posts_db
    depends_on:
      - kafka
      - posts-db
    networks:
      - microservices-network

  posts-db:
    image: postgres:15-alpine
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: posts_db
      POSTGRES_USER: posts
      POSTGRES_PASSWORD: posts_password
    volumes:
      - posts_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper
    networks:
      - microservices-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-network

volumes:
  posts_data:

networks:
  microservices-network:
    driver: bridge
